version: '2.1'
services:

  web:
    restart: always
    build: .
    command: >
      sh -c "python backend/manage.py"
    volumes:
      - type: bind
        source: .
        target: /backend
    env_file:
      - .env
    depends_on:
      - postgres
    environment:
      PYTHONPATH: /app
    ports:
      - "8000:5000"

  postgres:
    user: postgres
    restart: always
    build:
      context: ./docker-entrypoint
      dockerfile: db.Dockerfile
    volumes:
      - kanalservic:/var/lib/postgresql/data/
    ports:
      - "5432:5432"

  rabbitmq:
    image: rabbitmq:3-alpine
    ports:
      - '5673:5672'
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: 1HW5ZwaFufO2zASHJ1O
      RABBITMQ_DEFAULT_VHOST: 0
      RABBITMQ_NODE_PORT: 5672

    healthcheck:
      test: [ 'CMD', 'rabbitmqctl', 'status' ]
      interval: 30s
      timeout: 15s
      retries: 3

  celery:
    image: python:3.10
    build: .
    restart: always
    command: celery worker
    volumes:
       - kanalservic:/var/lib/celery/data/
    environment:
      CELERY_BROKER_URL: amqp://user:1HW5ZwaFufO2zASHJ1O@rabbitmq:5672/0
      CELERY_RESULT_BACKEND: rpc://rabbitmq:5672/0.
    depends_on:
      - db
      - rabbitmq

volumes:
  kanalservic:

